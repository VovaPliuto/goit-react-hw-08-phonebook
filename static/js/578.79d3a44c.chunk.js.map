{"version":3,"file":"static/js/578.79d3a44c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nconst StyledContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  width: 500px;\n  padding: 20px;\n  border: 3px solid #c14646;\n  border-radius: 10px;\n`;\n\nconst Input = styled.input`\n  width: 300px;\n`;\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  margin: 0 auto;\n`;\n\nconst Button = styled.button`\n  padding: 10px;\n  height: 40px;\n\n  font-size: 16px;\n  font-weight: 700;\n  color: #fff;\n  cursor: pointer;\n\n  background-color: #c14646;\n  border: 1px solid #fff;\n  border-radius: 10px;\n  margin: 0 auto;\n`;\n\nexport { StyledContactForm, Input, Label, Button };\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport { StyledContactForm, Input, Label, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onAddContact = newContact => {\n    if (contacts.find(el => el.name === newContact.name)) {\n      return alert(`${newContact.name} is already in contacts`);\n    }\n\n    dispatch(addContact(newContact));\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newName = {\n      name,\n      number,\n    };\n\n    onAddContact(newName);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <>\n      <StyledContactForm onSubmit={handleSubmit}>\n        <Label>\n          Name\n          <Input\n            onChange={handleChange}\n            value={name}\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label>\n          Phone\n          <Input\n            onChange={handleChange}\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </StyledContactForm>\n    </>\n  );\n};\n","import { styled } from 'styled-components';\n\nconst StyledContactsList = styled.ul`\n  margin: 0;\n  padding: 20px 2px;\n  list-style: none;\n`;\n\nconst ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  width: 450px;\n  padding: 10px;\n  border: 1px dotted #3700dc;\n\n  & + & {\n    margin-top: 1px;\n  }\n`;\n\nconst Text = styled.span`\n  width: 180px;\n`;\n\nconst Number = styled.i`\n  margin-left: 10px;\n`;\n\nconst DeleteBtn = styled.button`\n  width: 60px;\n  margin-left: 20px;\n  border-radius: 8px;\n  border: 1px solid #fd7e7e;\n\n  &:active {\n    background-color: #fd7e7e;\n  }\n`;\n\nexport { StyledContactsList, ListItem, Text, Number, DeleteBtn };\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { selectContacts, selectFilter } from 'redux/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport {\n  StyledContactsList,\n  ListItem,\n  Text,\n  Number,\n  DeleteBtn,\n} from './ContactList.styled';\n// import css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const data = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const onContactDelete = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const createContactsMarkup = ({ id, name, number }) => {\n    return (\n      <ListItem key={id}>\n        <Text>\n          <b>{name}</b>\n        </Text>\n        <span>\n          <Number>{number}</Number>\n        </span>\n        <DeleteBtn type=\"button\" onClick={() => onContactDelete(id)}>\n          Delete\n        </DeleteBtn>\n      </ListItem>\n    );\n  };\n\n  if (filter) {\n    return (\n      <StyledContactsList>\n        {data\n          .filter(({ name }) =>\n            name.toLowerCase().includes(filter.toLowerCase())\n          )\n          .map(el => {\n            return createContactsMarkup(el);\n          })}\n      </StyledContactsList>\n    );\n  }\n\n  return (\n    <StyledContactsList>\n      {data.map(el => {\n        return createContactsMarkup(el);\n      })}\n    </StyledContactsList>\n  );\n};\n","import { styled } from 'styled-components';\n\nexport const FilterInput = styled.input`\n  display: flex;\n  flex-direction: column;\n  margin-top: 5px;\n  width: 200px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { filterChange } from 'redux/filtersSlice';\nimport { selectFilter } from 'redux/selectors';\n\nimport { FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const filterValue = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n\n  const handleFilterChange = e => {\n    dispatch(filterChange(e.target.value));\n  };\n\n  return (\n    <div>\n      <label>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          onChange={handleFilterChange}\n          name=\"filter\"\n          value={filterValue}\n        />\n      </label>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\n\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n      {/* {isLoading && !error && <b>Request in progress...</b>} */}\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["StyledContactForm","styled","_templateObject","_taggedTemplateLiteral","Input","_templateObject2","Label","_templateObject3","Button","_templateObject4","ContactForm","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleChange","e","_e$target","target","value","_jsx","_Fragment","children","_jsxs","onSubmit","preventDefault","newContact","find","el","alert","concat","addContact","onAddContact","onChange","autoComplete","type","pattern","title","required","StyledContactsList","ListItem","Text","Number","DeleteBtn","_templateObject5","ContactList","data","filter","selectFilter","createContactsMarkup","_ref","id","onClick","contactId","deleteContact","_ref2","toLowerCase","includes","map","FilterInput","Filter","filterValue","filterChange","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","Helmet"],"sourceRoot":""}